Prompt 1:
I'm building a bidirectional data ingestion tool using Spring Boot (Java) and ClickHouse. Can you help me design a backend API that supports both ClickHouse ➝ Flat File and Flat File ➝ ClickHouse ingestion using JWT authentication?

Prompt 2:
How can I implement a service in Java that reads a CSV file, selects specific columns, and ingests the data into a ClickHouse table using batch inserts?

Prompt 3:
What is the best way to connect to ClickHouse using JDBC with JWT token authentication in a Spring Boot project?

Prompt 4:
Can you help me build a frontend UI in React for my ingestion tool with:
- Source selector (ClickHouse / Flat File)
- Connection input fields
- Column selector
- File upload component
- Ingestion button

Prompt 5:
How can I export data from ClickHouse to a CSV file in Java using JDBC?

Prompt 6:
What's a good way to implement JOIN support in my UI to allow users to select multiple tables and specify join conditions?

Prompt 7:
How do I handle CORS issues in a Spring Boot project when the frontend runs on a different port?

Prompt 8:
Can you help me implement error handling for failed ClickHouse connections and show the message in the UI using React?

Prompt 9:
How should I structure my Spring Boot application to separate config, controllers, services, and utilities?

Prompt 10:
What would a good test plan look like for a web-based ingestion tool like this? I need to validate both data directions and bonus JOIN functionality.
